#include <stdio.h>
#include <stdlib.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <unistd.h>
#include <wiringPi.h>
#define INVALID_SOCKET -1
#define SOCKET_ERROR -1
#define closesocket(x) close(x)
#define SERVO 1
#define SERVO2 23
typedef int SOCKET;
typedef struct sockaddr_in SOCKADDR_IN;
typedef struct sockaddr SOCKADDR;

int main(void)
{
    SOCKET sock;
    SOCKADDR_IN sin;
    char buffer[32] = "";
    int servo = 0;
    int servo2 = 0;

        sock = socket(AF_INET, SOCK_STREAM, 0);
        sin.sin_addr.s_addr =  inet_addr("192.168.1.85");
        sin.sin_family = AF_INET;
        sin.sin_port = htons(23);

        if(connect(sock, (SOCKADDR*)&sin, sizeof(sin)) != SOCKET_ERROR)
        {
            printf("Connection à %s sur le port %d\n", inet_ntoa(sin.sin_addr), htons(sin.sin_port));            
            if(recv(sock, buffer, 32, 0) != SOCKET_ERROR)
                printf("Recu : %s\n", buffer);
		sscanf(buffer,"%d %d", &servo, &servo2);
        }
        
        else
        {
            printf("Impossible de se connecter\n");
        }

	closesocket(sock);
	wiringPiSetup();
        
	pinMode(SERVO,PWM_OUTPUT);
        pwmSetMode(PWM_MODE_MS);
        pwmSetClock(192);
        pwmSetRange(2000); 
        pwmWrite(SERVO,servo);       
	delay(2000);
	pwmWrite(SERVO,155);
	

 	pinMode(SERVO2,PWM_OUTPUT);
        pwmSetMode(PWM_MODE_MS);
        pwmWrite(SERVO2,servo2);
        delay(2000);
        pwmWrite(SERVO2,137);
        
	return 0;
}